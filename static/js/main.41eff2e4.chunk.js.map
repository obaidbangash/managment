{"version":3,"sources":["redux/Type.js","redux/action/userAction.js","components/auth/SignUp.js","components/header/Header.js","components/dashboard/CreateUser.js","redux/action/PaginationAction.js","components/dashboard/EditUser.js","redux/action/Worklogs.js","components/dashboard/Pagenation.js","components/dashboard/GetUser.js","components/dashboard/ManagerDate.js","components/dashboard/workLogs/Setlogs.js","components/dashboard/workLogs/LogsData.js","components/dashboard/workLogs/UpdateLogs.js","components/dashboard/workLogs/SetHrs.js","components/dashboard/workLogs/FilterLog.js","components/dashboard/workLogs/LogsContainer.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","App.js","reportWebVitals.js","redux/reducer/userReducer.js","redux/reducer/PagenationReducer.js","redux/reducer/LogReducer.js","redux/reducer/index.js","redux/Store.js","index.js"],"names":["LOADING","SIGNUP_SUCCESS","ERROR","GETUSER","CREATE_USER","DELETE_USER","UPDATE_USER","SIGNIN_SUCCESS","PostLoading","type","PostError","error","payload","UpdateUser","state","token","sessionStorage","getItem","dispatch","axios","put","id","headers","then","res","user","data","users","catch","UpdateError","message","fetchPost","history","post","push","response","setRole","role","fetchIn","setItem","firstName","email","roles","name","Createusers","Create_user_Error","DeleteUser","delete","Delete_Error","getUsers","get","GetUserError","SignUp","setLogin","setActive","useDispatch","useSelector","userReducer","loading","useHistory","dataObj","lastName","password","password_confirmation","useState","userData","setUserData","valid","setValid","className","href","value","placeholder","onChange","e","target","onClick","preventDefault","length","formHandler","Array","isArray","map","item","Header","to","src","alt","removeItem","CreateUser","setCreateUser","formError","EserError","userType","set_page","page","getAllData","fetch","method","Authorization","json","pages","last_page","err","console","log","EditUser","setEditForm","editData","setEditData","edit","setEdit","Pagenation","GetLogSuccess","GetLogError","UpdateLogError","GetLogData","workLogs","GetSpecLogData","totalPages","AllPages","useEffect","style","cursor","GetUser","workData","scope","i","created_at","ManagerDate","manager","working_hours","Setlogs","setSetModal","logDate","hours","description","PostLogs","LogsData","setEditLogs","seteditModal","WorkLogs","LogReducer","logData","Id","logId","backgroundColor","is_under_hours","log_date","DeleteError","DeleteWorkLogs","UpdateLogs","editLogs","undefined","Update_Logs","SetHrs","preferedHrs","setPreferedHrs","preferedHours","workingHours","patch","PatchError","PatchGet","FilterLog","setFilterModal","From","dataFilter","setDateFilter","FilterSubmit","from","FilterError","FilterLogs","required","pattern","LogsContainer","editModal","setModal","FilterModal","Dashboard","createUser","editForm","SignIn","User","active","appId","autoLoad","fields","callback","accessToken","icon","App","Routes","auth","initToken","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Loading","updateUser","UserError","action","arr","getLogError","PerferedHours","deleteLogError","filterError","AllRedcuer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Store","createStore","AllReducer","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.41eff2e4.chunk.js","sourcesContent":["export const LOADING = \"LOADING\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const ERROR = \"ERROR\";\r\nexport const GETUSER = \"GETUSER\"\r\nexport const CREATE_USER = \"CREATE_USER\"\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\r\nexport const DELETE_SUCCESS = \"DELETE_SUCCESS\";\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { LOADING, ERROR, UPDATE_USER, CREATE_USER, SIGNUP_SUCCESS, SIGNIN_SUCCESS, DELETE_USER, GETUSER } from \"../Type\";\r\n// sign up action\r\nexport const PostLoading = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}\r\n\r\nexport const PostSuccess = (user) => {\r\n    return {\r\n        type: SIGNUP_SUCCESS,\r\n        payload: user.user\r\n    }\r\n}\r\n\r\n\r\nexport const PostError = (error) => {\r\n    return {\r\n        type: ERROR,\r\n        payload: error\r\n    }\r\n}\r\n// sign in \r\nexport const signLoading = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}\r\n\r\nexport const postSignIn = (user) => {\r\n    return {\r\n        type: SIGNIN_SUCCESS,\r\n        payload: user.user\r\n    }\r\n}\r\n\r\n\r\nexport const setToken = (token) => {\r\n    return {\r\n        type: \"TOKEN\",\r\n        token\r\n    }\r\n}\r\n// create new user\r\n\r\nexport const Create_user = (user) => {\r\n    return {\r\n        type: CREATE_USER,\r\n        payload: user.user\r\n    }\r\n}\r\nexport const Create_user_Error = (error) => {\r\n    return {\r\n        type: \"CREATE_USER_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n// update users\r\n\r\n\r\nexport const UpdateSuccess = (user) => {\r\n    return {\r\n        type: UPDATE_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const UpdateError = (error) => {\r\n    return {\r\n        type: \"UPDATE_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n// delete user\r\n\r\n\r\nexport const DeleteSuccess = (user) => {\r\n    return {\r\n        type: DELETE_USER,\r\n        payload: user\r\n    }\r\n}\r\nexport const Delete_Error = (error) => {\r\n    return {\r\n        type: \"DELETE_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n// get users\r\nexport const GetSuccess = (users) => {\r\n    return {\r\n        type: GETUSER,\r\n        payload: users\r\n    }\r\n}\r\nexport const GetUserError = (error) => {\r\n    return {\r\n        type: \"GET_USER_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n// update user\r\nexport const UpdateUser = (state,) => {\r\n    const token = sessionStorage.getItem(\"token\");\r\n    return (dispatch) => {\r\n        dispatch(PostLoading())\r\n        axios.put(`http://34.210.129.167/api/users/${state.id}`, state, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`,\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch(UpdateSuccess(res.data.users.data))\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch(UpdateError(error.message))\r\n            })\r\n    }\r\n}\r\n\r\n// sign up action\r\n\r\n\r\n\r\nexport const fetchPost = (state, history) => {\r\n    return (dispatch) => {\r\n        dispatch(PostLoading())\r\n        axios.post('http://34.210.129.167/api/register', state, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(PostSuccess(res.data))\r\n                history.push('/sign-in')\r\n            })\r\n            .catch(error => {\r\n                dispatch(PostError(error.response?.data))\r\n            })\r\n    }\r\n}\r\n// sign in \r\n\r\n// init token\r\nexport const initToken = () => {\r\n    const token = sessionStorage.getItem(\"token\");\r\n    return {\r\n        type: \"TOKEN\",\r\n        token: token === 'undefined' ? undefined : token\r\n    }\r\n}\r\nexport const setRole = (role) => {\r\n    // const role = sessionStorage.getItem(\"role\");\r\n    return {\r\n        type: \"ROLE\",\r\n        role\r\n\r\n    }\r\n}\r\n// sign out \r\nexport const SignOut = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    return {\r\n        type: \"SIGN_OUT\",\r\n        token: null\r\n    }\r\n}\r\n// create new user\r\n\r\n\r\n// signup \r\nexport const fetchIn = (state, history) => {\r\n    return (dispatch) => {\r\n        dispatch(signLoading())\r\n        axios.post('http://34.210.129.167/api/login', state, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                sessionStorage.setItem(\"token\", res.data.token)\r\n                sessionStorage.setItem(\"name\", res.data.user.firstName)\r\n                sessionStorage.setItem(\"email\", res.data.user.email)\r\n                sessionStorage.setItem(\"role\", res.data.user.roles[0].name)\r\n                sessionStorage.setItem(\"id\", res.data.user.id);\r\n                dispatch(setRole(res?.data?.user?.roles[0]?.name))\r\n                dispatch(postSignIn(res.data))\r\n                dispatch(setToken(res.data.token));\r\n                history.push('/')\r\n            })\r\n            .catch(error => {\r\n                dispatch(PostError(error.response?.data))\r\n            })\r\n    }\r\n}\r\n\r\n// create new user\r\n\r\n\r\n\r\nexport const Createusers = (state, token) => {\r\n    return (dispatch) => {\r\n        dispatch(PostLoading())\r\n        axios.post('http://34.210.129.167/api/users', state, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(Create_user(res.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(Create_user_Error(error.response?.data))\r\n            })\r\n    }\r\n}\r\n\r\n// delete user\r\nexport const DeleteUser = (token, id) => {\r\n    return (dispatch) => {\r\n        dispatch(PostLoading())\r\n        axios.delete(`http://34.210.129.167/api/users/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch(DeleteSuccess(res.data.users.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(Delete_Error(error.message))\r\n            })\r\n    }\r\n}\r\n\r\n// get users\r\n\r\nexport const getUsers = (token) => {\r\n    return (dispatch) => {\r\n        dispatch(PostLoading())\r\n        axios.get('http://34.210.129.167/api/users', {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch(GetSuccess(res.data.users.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(GetUserError(error.message))\r\n            })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPost } from '../../redux/action/userAction';\r\n// import { useReducer } from 'react';\r\n\r\nfunction SignUp({ setLogin, setActive }) {\r\n    const dispatch = useDispatch();\r\n    // const user = useSelector(state => state.userReducer.User);\r\n    const loading = useSelector(state => state.userReducer.loading);\r\n    const error = useSelector(state => state.userReducer.error);\r\n    const history = useHistory();\r\n\r\n    const dataObj = { firstName: \"\", lastName: \"\", email: \"\", password: \"\", password_confirmation: \"\" }\r\n    const [userData, setUserData] = useState(dataObj);\r\n    const [valid, setValid] = useState(false)\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n        if (userData.firstName.length < 1 || userData.lastName.length < 1 || userData.email.length < 1 || userData.password.length < 1 || userData.password_confirmation.length < 1) {\r\n            setValid(true);\r\n            // dispatch(fetchPost(userData))\r\n\r\n        } else if (!error) {\r\n            setActive(true)\r\n        }\r\n        else {\r\n            setValid(false);\r\n            dispatch(fetchPost(userData, history))\r\n            setUserData(dataObj);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"form-container sign-up-container\">\r\n            <form>\r\n                <h1>Create Account</h1>\r\n                <div className=\"social-container\">\r\n                    <a href=\"#\" className=\"social\"><i className=\"fa fa-facebook-f\"></i></a>\r\n                    <a href=\"#\" className=\"social\"><i className=\"fa fa-google\"></i></a>\r\n                    <a href=\"#\" className=\"social\"><i className=\"fa fa-linkedin\"></i></a>\r\n                </div>\r\n                <span className=\"useAcount\">or use your email for registration</span>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" value={userData.firstName} placeholder=\"First name\" onChange={(e) => {\r\n                        const data = { ...userData };\r\n                        data.firstName = e.target.value;\r\n                        setUserData(data)\r\n                    }} />\r\n                    {\r\n                        valid && userData.firstName == \"\" ? <span className=\"text-danger error-span py-2\">The First Name Can Not Be Blank.</span> : null\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" value={userData.lastName} placeholder=\"Last name\" onChange={(e) => {\r\n                        const data = { ...userData };\r\n                        data.lastName = e.target.value;\r\n                        setUserData(data)\r\n                    }} />\r\n                    {\r\n                        valid && userData.lastName == \"\" ? <span className=\"text-danger error-span py-2\">The Last Name Can Not Be Blank.</span> : null\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" value={userData.email} placeholder=\"Enter email\" onChange={(e) => {\r\n                        const data = { ...userData };\r\n                        data.email = e.target.value;\r\n                        setUserData(data)\r\n                    }} />\r\n                    {\r\n                        valid && userData.email == \"\" ? <span className=\"text-danger error-span py-2\">The Email Can Not Be Blank.</span> : null\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" value={userData.password} placeholder=\"Enter password\" onChange={(e) => {\r\n                        const data = { ...userData };\r\n                        data.password = e.target.value;\r\n                        setUserData(data)\r\n                    }} />\r\n                    {\r\n                        valid && userData.password == \"\" ? <span className=\"text-danger error-span py-2\">The Password Can Not Be Blank.</span> : null\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" value={userData.password_confirmation} placeholder=\"Confirm password\" onChange={(e) => {\r\n                        const data = { ...userData };\r\n                        data.password_confirmation = e.target.value;\r\n                        setUserData(data)\r\n                    }} />\r\n                    {\r\n                        valid && userData.password_confirmation == \"\" ? <span className=\"text-danger error-span py-2\">The Password Can Not Be Blank.</span> : null\r\n                    }\r\n                </div>\r\n                <button onClick={(e) => formHandler(e)}>Sign Up</button>\r\n                <div className=\"text-start mt-2\">{Array.isArray(error) ? error?.map(item => <p key={item} className=\"text-danger m-0 text-start\">{item}</p>) : error.message}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { SignOut } from '../../redux/action/userAction';\r\nfunction Header({ setLogin }) {\r\n    const name = sessionStorage.getItem(\"name\");\r\n    const dispatch = useDispatch();\r\n    // const signOut = () => {\r\n    //     // e.preventDefault()\r\n    //     sessionStorage.removeItem(\"email\");\r\n    //     sessionStorage.removeItem(\"token\");\r\n    //     sessionStorage.removeItem(\"role\");\r\n    //     sessionStorage.removeItem(\"logIn\");\r\n\r\n    //     // sessionStorage.removeItem(\"token\");\r\n    //     // sessionStorage.setItem(\"logIn\", false);\r\n    //     setLogin(false)\r\n\r\n    // }\r\n    let role = sessionStorage.getItem(\"role\")\r\n    return (\r\n        <header className=\" bg-dark\">\r\n            <nav className=\"navbar navbar-expand-lg   flex-column\">\r\n                <Link className=\"navbar-brand\" to={\"/\"}>\r\n                    <i className=\"fa fa-paw mx-2\"></i>\r\n                    Time Management</Link>\r\n\r\n                <div className=\"profile clearfix\">\r\n                    <div className=\"profile_pic\">\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/3011/3011270.png\" alt=\"...\" className=\"img-circle profile_img\" />\r\n                    </div>\r\n                    <div className=\"profile_info\">\r\n                        <span>Welcome,</span>\r\n                        <h2>{name}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse w-100 mt-5\" id=\"navbarTogglerDemo02\">\r\n                    <ul className=\"navbar-nav mx-auto flex-column w-100\">\r\n                        <li className=\"nav-item mx-2\">\r\n                            <Link className=\"nav-link\" to={\"/\"}><i className=\"fa fa-home\"></i>Dashboard</Link>\r\n                        </li>\r\n                        {\r\n                            role === \"admin\" ? <li className=\"nav-item mx-2\">\r\n                                <Link className=\"nav-link\" to={\"/Worklog\"}>\r\n                                    <i className=\"fa fa-table\"></i>\r\n                                    WorkLogs</Link>\r\n                            </li> : null\r\n                        }\r\n                        <li className=\"nav-item mx-2\">\r\n                            <Link className=\"nav-link\" to={\"/sign-up\"}>\r\n                                <i className=\"fa fa-edit\"></i>\r\n                                Create User</Link>\r\n                        </li>\r\n                        <li className=\"nav-item mx-2\">\r\n                            <Link className=\"nav-link\" to={\"/\"}>\r\n                                <i className=\"fa fa-bar-chart-o\"></i>\r\n                                Forms</Link>\r\n                        </li>\r\n                        <li className=\"nav-item mx-2\">\r\n                            <Link className=\"nav-link\" to={\"/\"}>\r\n                                <i className=\"fa fa-clone\"></i>\r\n                                Layouts</Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item mx-2\">\r\n                            <Link className=\"nav-link\" to={\"/sign-in\"} onClick={() => dispatch(SignOut())}>\r\n                                <i className=\"fa fa-sign-out\"></i>\r\n                                Sign Out</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Createusers, getUsers } from '../../redux/action/userAction';\r\nfunction CreateUser({ setCreateUser }) {\r\n    const formError = useSelector(state => state.userReducer.EserError);\r\n    // dispatch \r\n    const dispatch = useDispatch();\r\n    // getting token copy\r\n    let token = sessionStorage.getItem(\"token\");\r\n    // initial data\r\n    const dataObj = { firstName: \"\", lastName: \"\", email: \"\", password: \"\", password_confirmation: \"\", userType: \"user\" }\r\n    // state for userdata\r\n    const [userData, setUserData] = useState(dataObj);\r\n    // state for validation\r\n    const [valid, setValid] = useState(false)\r\n    // function for create user button\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n        if (userData.firstName.length < 1 || userData.lastName.length < 1 || userData.email.length < 1 || userData.password.length < 1 || userData.password_confirmation.length < 1) {\r\n            setValid(true);\r\n        } else {\r\n            setValid(false);\r\n            dispatch(Createusers(userData, token))\r\n            setUserData(dataObj);\r\n            dispatch(getUsers(token))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"auth-wrapper create-user\">\r\n\r\n                <div className=\"auth-inner\">\r\n                    <i className=\"fa fa-close close-btn\" onClick={() => setCreateUser(false)}> </i>\r\n                    <form>\r\n                        <h3>Create User</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>First name</label>\r\n                            <input type=\"text\" className=\"form-control\" value={userData.firstName} placeholder=\"First name\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.firstName = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.firstName == \"\" ? <span className=\"text-danger error-span py-2\">The First Name Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last name</label>\r\n                            <input type=\"text\" className=\"form-control\" value={userData.lastName} placeholder=\"Last name\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.lastName = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.lastName == \"\" ? <span className=\"text-danger error-span py-2\">The Last Name Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Email address</label>\r\n                            <input type=\"email\" className=\"form-control \" value={userData.email} placeholder=\"Enter email\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.email = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.email == \"\" ? <span className=\"text-danger error-span py-2\">The Email Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={userData.password} placeholder=\"Enter password\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.password = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.password == \"\" ? <span className=\"text-danger error-span py-2\">The Password Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={userData.password_confirmation} placeholder=\"Confirm password\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.password_confirmation = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.password_confirmation == \"\" ? <span className=\"text-danger error-span py-2\">The Password Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <button onClick={(e) => formHandler(e)} className=\"btn btn-primary btn-block\">Create User</button>\r\n                        {Array.isArray(formError) ? formError?.map(item => <p key={item} className=\"text-danger\">{item}</p>) || <p className=\"text-danger\">{formError.message}</p> : null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUser\r\n","const get_user = (data) => {\r\n    return {\r\n        type: \"SET_USERS\",\r\n        users: data.data,\r\n        pages: data.last_page\r\n    }\r\n}\r\nexport const set_page = (page) => {\r\n    return {\r\n        type: \"SET_PAGE\",\r\n        page\r\n    }\r\n}\r\n\r\nexport const getAllData = (token, page) => (dispatch) => {\r\n    fetch(`http://34.210.129.167/api/users?page=${page}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then((json) => json.json())\r\n        .then((response) => {\r\n            dispatch(get_user(response.users))\r\n        })\r\n        .catch((err) => console.log(err))\r\n}","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UpdateUser, getUsers } from \"../../redux/action/userAction\"\r\nimport { getAllData } from \"../../redux/action/PaginationAction\"\r\nfunction EditUser({ setEditForm, setEditData, editData }) {\r\n    const dispatch = useDispatch();\r\n    let token = sessionStorage.getItem(\"token\");\r\n    const dataObj = { firstName: \"\", lastName: \"\", email: \"\", password: \"\", password_confirmation: \"\" }\r\n    const [edit, setEdit] = useState(editData)\r\n    const [valid, setValid] = useState(false)\r\n    const page = useSelector((state) => state.Pagenation.page);\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n        if (edit.firstName.length < 1 || edit.lastName.length < 1 || edit.email.length < 1 || edit.password.length < 1 || edit.password_confirmation.length < 1) {\r\n            setValid(true);\r\n\r\n        } else {\r\n            setValid(false);\r\n            setValid(dataObj);\r\n            dispatch(UpdateUser(edit))\r\n            dispatch(getAllData(token, page));\r\n            dispatch(getUsers(token));\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"auth-wrapper create-user\">\r\n\r\n                <div className=\"auth-inner\">\r\n                    <i className=\"fa fa-close close-btn\" onClick={() => setEditForm(false)}> </i>\r\n                    <form>\r\n                        <h3>Update User</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>First name</label>\r\n                            <input type=\"text\" className=\"form-control\" value={edit.firstName} placeholder=\"First name\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.firstName = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.firstName == \"\" ? <span className=\"text-danger error-span py-2\">The First Name Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Last name</label>\r\n                            <input type=\"text\" className=\"form-control\" value={edit.lastName} placeholder=\"Last name\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.lastName = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.lastName == \"\" ? <span className=\"text-danger error-span py-2\">The Last Name Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Email address</label>\r\n                            <input type=\"email\" className=\"form-control \" value={edit.email} placeholder=\"Enter email\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.email = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.email == \"\" ? <span className=\"text-danger error-span py-2\">The Email Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={edit.password} placeholder=\"Enter password\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.password = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.password == \"\" ? <span className=\"text-danger error-span py-2\">The Password Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={edit.password_confirmation} placeholder=\"Confirm password\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.password_confirmation = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.password_confirmation == \"\" ? <span className=\"text-danger error-span py-2\">The Password Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <button onClick={(e) => formHandler(e)} className=\"btn btn-primary btn-block\">Update User</button>\r\n                        {/* {user ? user?.map(item => <p key={item} className=\"text-danger\">{item}</p>) : null} */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditUser\r\n","import axios from \"axios\";\r\n\r\nconst Loading = () => {\r\n    return {\r\n        type: \"LOADING\"\r\n    }\r\n}\r\n\r\nconst LogsSuccess = (log) => {\r\n    return {\r\n        type: \"POST_SUCCESS\",\r\n        payload: log,\r\n    }\r\n}\r\n\r\nconst PostError = (error) => {\r\n    return {\r\n        type: \"POST_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n// get logs\r\nexport const GetLogSuccess = (user) => {\r\n    return {\r\n        type: \"GET_LOG_SUCCESS\",\r\n        payload: user\r\n    }\r\n}\r\nexport const GetLogError = (error) => {\r\n    return {\r\n        type: \"GET_LOG_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const setLogID = (id) => {\r\n    return {\r\n        type: \"LOG_ID\",\r\n        payload: id\r\n    }\r\n}\r\n// edit logs\r\nexport const UpdateLog = (logData) => {\r\n    return {\r\n        type: \"UPDATE_LOG_SUCCESS\",\r\n        payload: logData\r\n    }\r\n}\r\nexport const UpdateLogError = (error) => {\r\n    return {\r\n        type: \"UPDATE_LOG_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\nexport const EditLogId = (id) => {\r\n    return {\r\n        type: \"EDIT_LOG_ID\",\r\n        payload: id\r\n    }\r\n}\r\n// work log filter\r\nconst FilterSuccess = (data) => {\r\n    return {\r\n        type: \"GET_LOG_SUCCESS\",\r\n        payload: { data }\r\n    }\r\n}\r\n\r\nconst FilterError = (error) => {\r\n    return {\r\n        type: \"FILTER_ERROR\",\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const FilterLogs = (from, to) => {\r\n    const token = sessionStorage.getItem(\"token\")\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        axios.get(`http://34.210.129.167/api/work-logs/${from}/${to}`, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(FilterSuccess(res.data.workLogs));\r\n            })\r\n            .catch(error => {\r\n                dispatch(FilterError(error.response?.data))\r\n            })\r\n    }\r\n}\r\n// prefered hrs\r\nconst PatchLoading = () => {\r\n    return {\r\n        type: \"LOADING\",\r\n\r\n    }\r\n}\r\n\r\nconst PatchError = (error) => {\r\n    return {\r\n        type: \"PATCH_ERROR\",\r\n        payload: error\r\n\r\n    }\r\n}\r\n// delete logs\r\n\r\nconst DeleteLog = (user) => {\r\n    return {\r\n        type: \"GET_LOG_SUCCESS\",\r\n        payload: user\r\n    }\r\n}\r\nconst DeleteError = (error) => {\r\n    return {\r\n        type: \"DELETE_LOG_ERROR\",\r\n        payload: error\r\n\r\n    }\r\n}\r\n// get logs\r\n\r\n\r\nexport const GetLogData = (token) => {\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        axios.get('http://34.210.129.167/api/work-logs', {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(GetLogSuccess(res.data.workLogs))\r\n            })\r\n            .catch(error => {\r\n                dispatch(GetLogError(error.response?.data))\r\n            })\r\n    }\r\n}\r\n// delete \r\nexport const DeleteWorkLogs = (id) => {\r\n    const token = sessionStorage.getItem('token')\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        axios.delete(`http://34.210.129.167/api/work-logs/${id}`, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch(DeleteLog(res.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(DeleteError(error.message))\r\n            })\r\n    }\r\n}\r\n\r\n// create logs\r\nexport const PostLogs = (state, token) => {\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        axios.post(`http://34.210.129.167/api/work-logs`,\r\n            state, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        }).then((res) => {\r\n            dispatch(LogsSuccess(res.data))\r\n        })\r\n            .catch(error => {\r\n                dispatch(PostError(error.response?.data))\r\n            })\r\n    }\r\n}\r\n\r\n// edit logs\r\n\r\n\r\nexport const Update_Logs = (id, state, token) => {\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        id == undefined ? axios.put(`http://34.210.129.167/api/work-logs/${state.id}`, state, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(GetLogData(token))\r\n            })\r\n            .catch(error => {\r\n                dispatch(UpdateLogError(error.response?.data))\r\n            }) : axios.put(`http://34.210.129.167/api/user/${id}/work-logs/${state.id}`, state, {\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    dispatch(GetLogData(token))\r\n                })\r\n                .catch(error => {\r\n                    dispatch(UpdateLogError(error.response?.data))\r\n                })\r\n    }\r\n}\r\n\r\n\r\n// if specific as a admin we get logs\r\nexport const GetSpecLogData = (id, token) => {\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        axios.get(`http://34.210.129.167/api/user/${id}/work-logs`, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(GetLogSuccess(res.data.workLogs));\r\n            })\r\n            .catch(error => {\r\n                dispatch(GetLogError(error.response?.data))\r\n            })\r\n    }\r\n}\r\n// prefered hrs\r\nexport const PatchGet = (workingHours) => {\r\n    const token = sessionStorage.getItem(\"token\");\r\n    const id = sessionStorage.getItem(\"id\");\r\n    return (dispatch) => {\r\n        dispatch(Loading())\r\n        axios.patch(`http://34.210.129.167/api/users/${id}/preferred-working-hours`,\r\n            {\r\n                workingHours: `${workingHours}`,\r\n            }, {\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n        }).then((res) => {\r\n\r\n        })\r\n            .catch(error => {\r\n                dispatch(PatchError(error))\r\n            })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { set_page, getAllData } from \"../../redux/action/PaginationAction\"\r\nfunction Pagenation() {\r\n    const token = sessionStorage.getItem('token')\r\n    const dispatch = useDispatch()\r\n    const page = useSelector((state) => state.Pagenation.page)\r\n    const totalPages = useSelector((state) => state.Pagenation.AllPages);\r\n    useEffect(() => {\r\n        dispatch(getAllData(token, page));\r\n    }, [token, page])\r\n\r\n    return (\r\n        <>\r\n            <nav aria-label=\"...\" className=\"text-end\">\r\n                <ul className=\"pagination mt-5 ml-auto justify-content-end\">\r\n                    {totalPages.length >= page ? <li className={`page-item ${page == 1 ? \"d-none\" : ''}`}>\r\n                        <span className=\"page-link\" style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(totalPages[0]))}>First Page</span>\r\n                    </li> : null}\r\n                    <li className={`page-item ${page <= 1 ? \"disabled\" : ''}`}>\r\n                        <span className='page-link' style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(page - 1))}>Previous</span>\r\n                    </li>\r\n                    {page > 1 ? <li className={`page-item`} >\r\n                        <span className=\"page-link\" style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(page - 1))}>{page - 1}</span>\r\n                    </li> : null}\r\n                    <li className={`page-item ${page === page ? 'active' : ''}`} >\r\n                        <span className=\"page-link\" style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(page))}>{page}</span>\r\n                    </li>\r\n                    {totalPages.length > page ? <li className={`page-item`} >\r\n                        <span className=\"page-link\" style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(page + 1))}>{page + 1}</span>\r\n                    </li> : null}\r\n                    <li className={`page-item ${page === totalPages.length ? \"disabled\" : ''}`}>\r\n                        <span className={`page-link`} style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(page + 1))}>Next</span>\r\n                    </li>\r\n                    {totalPages.length > page ? <li className={`page-item`} >\r\n                        <span className=\"page-link\" style={{ cursor: 'pointer' }} onClick={() => dispatch(set_page(totalPages.length))}>Last Page</span>\r\n                    </li> : null}\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pagenation\r\n","import React, { useEffect } from 'react';\r\nimport { setLogID } from '../../redux/action/Worklogs';\r\nimport { DeleteUser, getUsers } from '../../redux/action/userAction';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllData } from \"../../redux/action/PaginationAction\";\r\nimport Pagenation from \"./Pagenation\";\r\nimport { useHistory } from 'react-router-dom';\r\nfunction GetUser({ setEditForm, setEditData }) {\r\n    const history = useHistory();\r\n    const user = useSelector(state => state.userReducer.users);\r\n    const dispatch = useDispatch();\r\n    let token = sessionStorage.getItem(\"token\");\r\n    useEffect(() => {\r\n        dispatch(getUsers(token))\r\n    }, []);\r\n\r\n    const workData = useSelector(state => state.Pagenation.users);\r\n    const page = useSelector((state) => state.Pagenation.page)\r\n    useEffect(() => {\r\n        dispatch(getAllData(token, page));\r\n    }, [token, page])\r\n\r\n    const RemoveUser = (id) => {\r\n        dispatch(getUsers(token))\r\n        dispatch(DeleteUser(token, id))\r\n    }\r\n    const EditUser = (state) => {\r\n        setEditData(state)\r\n        setEditForm(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-striped\">\r\n                <thead className=\"thead-dark bg-dark text-white\">\r\n                    <tr>\r\n                        <th className=\"px-3\" scope=\"col\">#</th>\r\n                        <th scope=\"col\">FirstName</th>\r\n                        <th scope=\"col\">LastName</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Created_at</th>\r\n                        <th scope=\"col\">Role</th>\r\n                        <th scope=\"col\">View Logs</th>\r\n                        <th scope=\"col\" className=\"text-center\">Action</th>\r\n                        {/* <th scope=\"col\" className=\"text-center\">Edit</th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {Array.isArray(workData) && workData?.map((item, i) => {\r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <th scope=\"row\">{item.id}</th>\r\n                                <td>{item.firstName}</td>\r\n                                <td>{item.lastName}</td>\r\n                                <td>{item.email}</td>\r\n                                <td>{item.created_at}</td>\r\n                                <td>{item.roles[0].name}</td>\r\n                                <td>{item.roles[0].name === \"user\" ? <button className=\"btn\" onClick={() => {\r\n                                    dispatch(setLogID(item.id))\r\n                                    history.push('/Worklog')\r\n                                }}>View Logs</button> : <button className=\"btn\" > no Logs</button>}</td>\r\n                                <td className=\"text-center \">\r\n                                    <i className=\"fa fa-edit\" onClick={() => {\r\n                                        EditUser(item)\r\n                                    }} ></i>\r\n                                    <i className=\"fa fa-trash mx-2 cursor-pointer\" onClick={() => {\r\n                                        RemoveUser(item.id)\r\n                                    }}>\r\n                                    </i>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n\r\n                    })\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n            <Pagenation />\r\n\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default GetUser\r\n","import React, { useEffect } from 'react'\r\nimport { DeleteUser, getUsers } from '../../redux/action/userAction';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllData } from \"../../redux/action/PaginationAction\";\r\nimport Pagenation from \"./Pagenation\";\r\nfunction ManagerDate({ setEditData, setEditForm }) {\r\n    const user = useSelector(state => state.userReducer.users);\r\n    let role = sessionStorage.getItem(\"role\")\r\n    const dispatch = useDispatch();\r\n    let token = sessionStorage.getItem(\"token\");\r\n    useEffect(() => {\r\n        dispatch(getUsers(token))\r\n    }, []);\r\n\r\n    const workData = useSelector(state => state.Pagenation.users);\r\n    const page = useSelector((state) => state.Pagenation.page)\r\n    const totalPages = useSelector((state) => state.Pagenation.AllPages)\r\n    useEffect(() => {\r\n        dispatch(getAllData(token, page));\r\n    }, [token, page])\r\n\r\n    const RemoveUser = (id) => {\r\n        dispatch(getUsers(token))\r\n        dispatch(DeleteUser(token, id))\r\n    }\r\n    const EditUser = (state) => {\r\n        setEditData(state)\r\n        setEditForm(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-striped\">\r\n                <thead className=\"thead-dark bg-dark text-white\">\r\n                    <tr>\r\n                        <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">FirstName</th>\r\n                        <th scope=\"col\">LastName</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Created_at</th>\r\n                        <th scope=\"col\">Manager</th>\r\n                        <th scope=\"col\">Working Hrs</th>\r\n                        <th scope=\"col\">Delete</th>\r\n                        <th scope=\"col\">Edit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.isArray(user) && user?.map((item, i) => {\r\n                        return (\r\n                            <>\r\n                                <tr key={i}>\r\n                                    <th scope=\"row\">{item.id}</th>\r\n                                    <td>{item.firstName}</td>\r\n                                    <td>{item.lastName}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.created_at}</td>\r\n                                    <td>{item.manager?.firstName}</td>\r\n                                    <td>{item.manager?.working_hours}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => {\r\n                                        RemoveUser(item.id)\r\n                                    }}>Delete</button></td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => {\r\n                                        EditUser(item)\r\n                                    }} >Edit</button></td>\r\n                                </tr>\r\n                            </>\r\n                        )\r\n\r\n                    })\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n            <Pagenation />\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default ManagerDate\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetLogData, PostLogs } from '../../../redux/action/Worklogs';\r\nfunction Setlogs({ setSetModal }) {\r\n    const dispatch = useDispatch();\r\n    let token = sessionStorage.getItem(\"token\");\r\n\r\n    const dataObj = { logDate: \"\", hours: \"\", description: \"\", }\r\n    const [edit, setEdit] = useState(dataObj)\r\n    const [valid, setValid] = useState(false)\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n        if (edit.logDate.length < 1 || edit.hours.length < 1 || edit.description.length < 1) {\r\n            setValid(true);\r\n        } else {\r\n            setValid(false)\r\n            dispatch(PostLogs(edit, token))\r\n            dispatch(GetLogData(token))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"auth-wrapper create-user\">\r\n\r\n                <div className=\"auth-inner\">\r\n                    <div className=\"close-btn\" onClick={() => setSetModal(false)}>  <i className=\"fa fa-close\"> </i></div>\r\n                    <form>\r\n                        <h3>Create WorkLogs</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>Log Data</label>\r\n                            <input type=\"date\" className=\"form-control\" value={edit.logDate} placeholder=\"logDate\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.logDate = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.logDate == \"\" ? <span className=\"text-danger error-span py-2\">The logDate Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Hours</label>\r\n                            <input type=\"number\" className=\"form-control\" value={edit.hours} placeholder=\"Hours\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.hours = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.hours == \"\" ? <span className=\"text-danger error-span py-2\">Hours Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea type=\"text\" className=\"form-control \" value={edit.description} placeholder=\"Description\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.description = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.description == \"\" ? <span className=\"text-danger error-span py-2\">Description Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <button onClick={(e) => formHandler(e)} className=\"btn btn-primary btn-block\">Create Logs</button>\r\n                        {/* {user ? user?.map(item => <p key={item} className=\"text-danger\">{item}</p>) : null} */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Setlogs;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GetLogData, GetSpecLogData, DeleteWorkLogs } from '../../../redux/action/Worklogs';\r\nfunction LogsData({ setEditLogs, seteditModal }) {\r\n    const WorkLogs = useSelector(state => state.LogReducer.logData.data);\r\n    const Id = useSelector(state => state.LogReducer.logId);\r\n    const dispatch = useDispatch();\r\n    let token = sessionStorage.getItem(\"token\")\r\n    useEffect(() => {\r\n        Id ? dispatch(GetSpecLogData(Id, token)) : dispatch(GetLogData(token))\r\n    }, [token, Id])\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <table className=\"table table-hover\">\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Log Date</th>\r\n                        <th>Created at</th>\r\n                        <th>Hours</th>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        WorkLogs?.map((item, i) => {\r\n                            return (\r\n                                <tr key={i} style={{ backgroundColor: item?.is_under_hours ? '#aedb9f' : '#FFCCCB' }}>\r\n                                    <td>{item?.id}</td>\r\n                                    <td>{item?.log_date}</td>\r\n                                    <td>{item?.created_at}</td>\r\n                                    <td>{item?.hours}</td>\r\n                                    <td>{item?.description}</td>\r\n                                    <td><button className=\"btn btn-success\" onClick={() => {\r\n                                        seteditModal(true)\r\n                                        setEditLogs(item)\r\n                                    }}>Edit</button></td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => {\r\n                                        Id ? dispatch(GetSpecLogData(Id, token)) : dispatch(GetLogData(token))\r\n                                        dispatch(DeleteWorkLogs(item.id))\r\n                                    }}>Delete</button></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogsData\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Update_Logs } from '../../../redux/action/Worklogs';\r\nfunction UpdateLogs({ editLogs, seteditModal }) {\r\n    const error = useSelector(state => state.LogReducer.error)\r\n    const dispatch = useDispatch();\r\n    let token = sessionStorage.getItem(\"token\");\r\n    const [edit, setEdit] = useState(editLogs)\r\n    const [valid, setValid] = useState(false)\r\n    const Id = useSelector(state => state.LogReducer.logId);\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (edit.logDate.length < 1 || edit.hours.length < 1 || edit.description.length < 1) {\r\n            setValid(true);\r\n\r\n        } else {\r\n            setValid(false)\r\n            dispatch(Update_Logs(Id, edit, token))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"auth-wrapper create-user\">\r\n\r\n                <div className=\"auth-inner\">\r\n                    <div className=\"close-btn\" onClick={() => {\r\n                        seteditModal(false)\r\n                    }}>  <i className=\"fa fa-close\"> </i></div>\r\n                    <form>\r\n                        <h3>Edit WorkLog</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>Log Data</label>\r\n                            <input type=\"date\" className=\"form-control\" value={edit.logDate} placeholder=\"logDate\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.logDate = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.logDate == \"\" ? <span className=\"text-danger error-span py-2\">The logDate Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Hours</label>\r\n                            <input type=\"number\" className=\"form-control\" value={edit.hours} placeholder=\"Hours\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.hours = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.hours == \"\" ? <span className=\"text-danger error-span py-2\">Hours Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea type=\"text\" className=\"form-control \" value={edit.description} placeholder=\"Description\" onChange={(e) => {\r\n                                const data = { ...edit };\r\n                                data.description = e.target.value;\r\n                                setEdit(data)\r\n                            }} />\r\n                            {\r\n                                valid && edit.description == \"\" ? <span className=\"text-danger error-span py-2\">Description Can Not Be Blank.</span> : null\r\n                            }\r\n                        </div>\r\n                        <button onClick={(e) => formHandler(e)} className=\"btn btn-primary btn-block\">Update Log</button>\r\n                        {Array.isArray(error) ? error?.map(item => <p key={item} className=\"text-danger\">{item}</p>) : null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateLogs;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GetLogData, GetSpecLogData, PatchGet } from '../../../redux/action/Worklogs';\r\nfunction SetHrs() {\r\n    const [preferedHrs, setPreferedHrs] = useState('');\r\n    const dispatch = useDispatch()\r\n    const Id = useSelector(state => state.LogReducer.logId);\r\n    let token = sessionStorage.getItem(\"token\")\r\n    const preferedHours = () => {\r\n        dispatch(PatchGet(preferedHrs))\r\n        Id ? dispatch(GetSpecLogData(Id, token)) : dispatch(GetLogData(token))\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"d-flex w-50 mx-auto\">\r\n                <div className=\"prefered-hours mx-3\">\r\n                    <input className=\"form-control\" placeholder=\"Set Prefered Hours\" type=\"number\" onChange={(e) => {\r\n                        setPreferedHrs(e.target.value)\r\n                    }} />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={() => preferedHours()}>Set Prefered Hours</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetHrs\r\n","import React, { useState } from 'react'\r\nimport { FilterLogs } from '../../../redux/action/Worklogs';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nfunction FilterLog({ setFilterModal }) {\r\n    const dispatch = useDispatch()\r\n    const [dataFilter, setDateFilter] = useState({ From: \"\", to: \"\" })\r\n\r\n    const FilterSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(FilterLogs(dataFilter.from, dataFilter.to))\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"auth-wrapper create-user\">\r\n\r\n                <div className=\"auth-inner\">\r\n                    <div className=\"close-btn\" onClick={() => setFilterModal(false)}>  <i className=\"fa fa-close\"> </i></div>\r\n                    <form>\r\n                        <h3>Filter by date</h3>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" placeholder=\"from\" className=\"form-control\" required pattern=\"\\d{4}-\\d{1}-\\d{1}\" onChange={(e) => {\r\n                                const data = { ...dataFilter };\r\n                                data.from = e.target.value;\r\n                                setDateFilter(data)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" placeholder=\"to\" className=\"form-control\" onChange={(e) => {\r\n                                const data = { ...dataFilter };\r\n                                data.to = e.target.value;\r\n                                setDateFilter(data)\r\n                            }} />\r\n                        </div>\r\n                    </form>\r\n                    <button className=\"btn btn-success\" onClick={(e) => {\r\n\r\n                        FilterSubmit(e)\r\n                    }}>Filter by data</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterLog\r\n","import React, { useState } from 'react'\r\nimport Setlogs from './Setlogs';\r\nimport LogsData from './LogsData';\r\nimport UpdateLogs from './UpdateLogs';\r\nimport SetHrs from './SetHrs';\r\nimport FilterLog from './FilterLog';\r\n\r\nfunction LogsContainer() {\r\n    const [editLogs, setEditLogs] = useState([])\r\n    const [editModal, seteditModal] = useState(false)\r\n    const [setModal, setSetModal] = useState(false)\r\n    const [FilterModal, setFilterModal] = useState(false)\r\n    return (\r\n        <>\r\n            <section className=\"main-section\">\r\n                <div className=\"d-flex mb-3\">\r\n                    <button className=\"btn btn-danger \" onClick={() => setSetModal(true)}><i className=\"fa fa-plus mx-2\"></i> Add WorkLogs</button>\r\n                    <SetHrs />\r\n                    <button className=\"btn btn-danger \" onClick={() => setFilterModal(true)}><i className=\"fa fa-plus mx-2\"></i> Filter by Date</button>\r\n\r\n\r\n                </div>\r\n                {FilterModal ? <FilterLog setFilterModal={setFilterModal} /> : null}\r\n                {setModal ? <Setlogs setSetModal={setSetModal} /> : null}\r\n                <LogsData setEditLogs={setEditLogs} seteditModal={seteditModal} />\r\n                {editModal ? <UpdateLogs setEditLogs={setEditLogs} editLogs={editLogs} seteditModal={seteditModal} /> : null}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogsContainer\r\n","import React, { useState } from 'react'\r\nimport CreateUser from \"./CreateUser\";\r\nimport EditUser from './EditUser';\r\nimport GetUser from './GetUser';\r\nimport ManagerDate from './ManagerDate';\r\n\r\nimport LogsContainer from './workLogs/LogsContainer';\r\n\r\nfunction Dashboard() {\r\n    const [createUser, setCreateUser] = useState(false);\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [editData, setEditData] = useState({})\r\n    let role = sessionStorage.getItem(\"role\")\r\n    return (\r\n        <>\r\n            {\r\n                role === \"admin\" ?\r\n                    <><section className=\"main-section\">\r\n                        <button onClick={() => setCreateUser(true)} className=\"btn btn-danger\"><i className=\"fa fa-plus mx-2\"> </i>Create User</button>\r\n                        <GetUser setEditForm={setEditForm} setEditData={setEditData} />\r\n                        {createUser ? <CreateUser setCreateUser={setCreateUser} /> : null}\r\n                        {editForm ? <EditUser setEditForm={setEditForm} editData={editData} setEditData={setEditData} /> : null}\r\n                    </section>\r\n                    </> : role === \"manager\" ? <>\r\n                        <section className=\"main-section\">\r\n                            <button onClick={() => setCreateUser(true)} className=\"btn btn-danger\">Create User </button>\r\n                            <ManagerDate setEditForm={setEditForm} setEditData={setEditData} />\r\n                            {createUser ? <CreateUser setCreateUser={setCreateUser} /> : null}\r\n                            {editForm ? <EditUser setEditForm={setEditForm} editData={editData} setEditData={setEditData} /> : null}\r\n                        </section>\r\n                    </> : <>\r\n                        <LogsContainer />\r\n                    </>\r\n            }\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchIn } from \"../../redux/action/userAction\";\r\nimport SignUp from \"./SignUp\";\r\nimport FacebookLogin from 'react-facebook-login';\r\n// import \"./Login.css\";\r\nfunction SignIn({ setLogin }) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.userReducer.User);\r\n    const error = useSelector(state => state.userReducer.error);\r\n    const history = useHistory();\r\n\r\n\r\n    const dataObj = { email: \"\", password: \"\" }\r\n    const [userData, setUserData] = useState(dataObj);\r\n    const [valid, setValid] = useState(false)\r\n    const formHandler = (e) => {\r\n        e.preventDefault();\r\n        // console.log(userData);\r\n        if (userData.email.length < 1 || userData.password.length < 1) {\r\n            setValid(true);\r\n        } else {\r\n            setValid(false);\r\n            dispatch(fetchIn(userData, history));\r\n            setUserData(dataObj);\r\n            // setLogin(true)\r\n        }\r\n\r\n    }\r\n    const [active, setActive] = useState(true);\r\n\r\n    const responseFacebook = (response) => {\r\n        console.log(response);\r\n        // setData(response);\r\n        // setPicture(response.picture.data.url);\r\n        if (response.accessToken) {\r\n            dispatch(fetchIn(response, history));\r\n        } else {\r\n            console.log(\"hello\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className={!active ? `form-wrapper right-panel-active` : \"form-wrapper\"}>\r\n                <SignUp setActive={setActive} />\r\n                <div className=\"form-container sign-in-container\">\r\n                    <form>\r\n                        <h1>Sign in</h1>\r\n                        <div className=\"social-container\">\r\n                            <FacebookLogin\r\n                                appId=\"921201001964201\"\r\n                                autoLoad={true}\r\n                                fields=\"name,email,picture\"\r\n                                scope=\"public_profile,user_friends\"\r\n                                callback={responseFacebook}\r\n                                icon=\"fa-facebook\" />\r\n                            <a href=\"#\" className=\"social\"><i className=\"fa fa-google\"></i></a>\r\n                            <a href=\"#\" className=\"social\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        </div>\r\n                        <span className=\"useAcount\">or use your account</span>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" value={userData.email} placeholder=\"Enter email\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.email = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.email == \"\" ? <span className=\"text-danger error-span py-2\">Email required *</span> : null\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" value={userData.password} placeholder=\"Enter password\" onChange={(e) => {\r\n                                const data = { ...userData };\r\n                                data.password = e.target.value;\r\n                                setUserData(data)\r\n                            }} />\r\n                            {\r\n                                valid && userData.password == \"\" ? <span className=\"text-danger error-span py-2\">Password required *</span> : null\r\n                            }\r\n                        </div>\r\n                        <a href=\"#\">Forgot your password?</a>\r\n                        <button onClick={(e) => formHandler(e)} >Sign In</button>\r\n                        {Array.isArray(error) ? error?.map(item => <p key={item} className=\"text-danger\">{item}</p>) : null}\r\n                    </form>\r\n                </div>\r\n                <div className=\"overlay-container\">\r\n                    <div className=\"overlay\">\r\n                        <div className=\"overlay-panel overlay-left\">\r\n                            <h1>Welcome Back!</h1>\r\n                            <p>To keep connected with us please login with your personal info</p>\r\n                            <button className=\"ghost\" id=\"signIn\" onClick={() => setActive(true)}>Sign In</button>\r\n                        </div>\r\n                        <div className=\"overlay-panel overlay-right\">\r\n                            <h1>Hello, Friend!</h1>\r\n                            <p>Enter your personal details and start journey with us</p>\r\n                            <button className=\"ghost\" id=\"signUp\" onClick={() => setActive(false)}>Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React, { useState, useEffect } from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport Header from './components/header/Header';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport SignIn from './components/auth/SignIn';\r\nimport { initToken } from './redux/action/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LogsContainer from './components/dashboard/workLogs/LogsContainer';\r\nimport { setRole } from './redux/action/userAction';\r\nimport FacebookLogin from 'react-facebook-login';\r\nfunction App() {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.userReducer.token);\r\n  const Role = sessionStorage.getItem('role')\r\n  const auth = sessionStorage.getItem(\"logIn\")\r\n  const [logIn, setLogin] = useState(auth);\r\n  useEffect(() => {\r\n    dispatch(initToken())\r\n\r\n  }, [token]);\r\n  useEffect(() => {\r\n    dispatch(setRole());\r\n  })\r\n\r\n  let Routes;\r\n  if (token) {\r\n    Routes = (\r\n      <>\r\n        <Header setLogin={setLogin} />\r\n        <Switch>\r\n          <Route exact path=\"/Dashboard\" component={Dashboard} />\r\n          <Route path=\"/Worklog\" component={LogsContainer} />\r\n          <Redirect from='/' to='/Dashboard' />\r\n        </Switch>\r\n      </>\r\n    )\r\n  } else {\r\n    Routes = (\r\n      <Switch>\r\n        <Route path=\"/sign-in\" render={() => <SignIn setLogin={setLogin} />} />\r\n        <Route path=\"/sign-up\" render={() => <SignUp setLogin={setLogin} />} />\r\n        <Redirect from='/' to='/sign-in' />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <div className=\"App\">\r\n\r\n        {Routes}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ERROR, LOADING, SIGNUP_SUCCESS, SIGNIN_SUCCESS, GETUSER, CREATE_USER, DELETE_USER, UPDATE_USER } from \"../Type\";\r\nconst initialState = {\r\n    Loading: false,\r\n    User: null,\r\n    error: \"\",\r\n    users: [],\r\n    token: '',\r\n    updateUser: [],\r\n    UserError: \"\",\r\n    DeleteError: \"\",\r\n    UpdateError: \"\",\r\n    GetUserError: \"\",\r\n    role: \"\",\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                Loading: true,\r\n\r\n            }\r\n        // sign up \r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                User: action.payload,\r\n                error: \"\"\r\n            }\r\n        // sign in \r\n        case SIGNIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                User: action.payload,\r\n                error: \"\"\r\n            }\r\n\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                User: [],\r\n                error: action.payload\r\n            }\r\n        // get users\r\n        case GETUSER:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                users: action.payload,\r\n                error: \"\",\r\n            }\r\n        case \"GET_USER_ERROR\":\r\n            return {\r\n                ...state,\r\n                GetUserError: action.payload,\r\n            }\r\n        // create users\r\n        case CREATE_USER:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                users: action.payload,\r\n                error: \"\",\r\n            }\r\n        case \"CREATE_USER_ERROR\":\r\n            return {\r\n                ...state,\r\n                UserError: action.payload\r\n            }\r\n        // delete users\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                users: action.payload,\r\n                error: \"\",\r\n            }\r\n\r\n        case \"DELETE_ERROR\":\r\n            return {\r\n                ...state,\r\n                DeleteError: action.payload\r\n            }\r\n        // update users\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                updateUser: action.payload,\r\n                error: \"\",\r\n            }\r\n        case \"UPDATE_ERROR\":\r\n            return {\r\n                ...state,\r\n                UpdateError: action.payload\r\n            }\r\n        case \"TOKEN\":\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case \"ROLE\":\r\n            return {\r\n                ...state,\r\n                role: action.role\r\n            }\r\n        // sign out\r\n        case \"SIGN_OUT\":\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    page: 1,\r\n    AllPages: []\r\n}\r\n\r\nconst Pagenation = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USERS\":\r\n            const arr = [];\r\n            for (let i = 1; i <= action.pages; i++) {\r\n                arr.push(i);\r\n            }\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n                AllPages: arr,\r\n            }\r\n        case \"SET_PAGE\":\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default Pagenation\r\n","const initialState = {\r\n    Loading: false,\r\n    log: [],\r\n    error: \"\",\r\n    logData: [],\r\n    getLogError: \"\",\r\n    logId: undefined,\r\n    PerferedHours: {},\r\n    PatchError: \"\",\r\n    deleteLogError: \"\",\r\n    filterError: \"\"\r\n}\r\nconst LogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {\r\n                ...state,\r\n                Loading: true,\r\n            }\r\n        case \"POST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                log: action.payload,\r\n            }\r\n        case \"POST_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        // get log data\r\n        case \"GET_LOG_LOADING\":\r\n            return {\r\n                ...state,\r\n                Loading: true,\r\n            }\r\n        case \"GET_LOG_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                logData: action.payload,\r\n            }\r\n        case \"GET_LOG_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        // log edit\r\n        case \"UPDATE_LOADING\":\r\n            return {\r\n                ...state,\r\n                Loading: true,\r\n            }\r\n        case \"UPDATE_LOG_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                Loading: false,\r\n                logData: action.payload,\r\n            }\r\n        case \"UPDATE_LOG_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case \"LOG_ID\":\r\n            return {\r\n                ...state,\r\n                logId: action.payload\r\n            }\r\n        // perfered hours\r\n\r\n        case \"PATCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                PatchError: action.payload\r\n            }\r\n        // delete logs\r\n        case \"DELETE_LOG_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                logData: action.payload,\r\n            }\r\n        case \"DELETE_LOG_ERROR\":\r\n            return {\r\n                ...state,\r\n                deleteLogError: action.payload\r\n            }\r\n        // filter reducer\r\n        case \"FILTER_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                logData: action.payload,\r\n            }\r\n        case \"FILTER_ERROR\":\r\n            return {\r\n                ...state,\r\n                filterError: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default LogReducer","import { userReducer } from \"./userReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport Pagenation from \"./PagenationReducer\";\r\nimport LogReducer from \"./LogReducer\";\r\n\r\n\r\n\r\nconst AllRedcuer =\r\n    combineReducers({\r\n        userReducer, Pagenation, LogReducer\r\n    })\r\n\r\n\r\nexport default AllRedcuer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport AllReducer from \"./reducer/index\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst Store = createStore(AllReducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport default Store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from \"./redux/Store\";\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}